import logging
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import config
import re
from keyboard import kb1, kb2
from random_fox import fox
from random import randint


API_TOKEN = config.token


# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
logging.basicConfig(level=logging.INFO)


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
 name = message.chat.first_name
 await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {name}, –Ø –≠—Ö–æ–±–æ—Ç" , reply_markup=kb1)


@dp.message(Command("info"))
async def cmd_info(message: types.Message):
 await message.reply("–Ø —É–º–µ—é –ø–æ–≤—Ç–æ—Ä—è—Ç—å")


@dp.message(Command("fox"))
@dp.message(Command("–ª–∏—Å–∞"))
@dp.message(F.text.lower() == "–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É")
async def cmd_fox(message: types.Message):
    img_fox = fox()
    await message.reply(f"–î–µ—Ä–∂–∏ –õ–∏—Å—É")
    await message.answer_photo(photo=img_fox)

@dp.message(F.text.lower() == 'num')
async def send_random(message: types.Message):
        number = randint(1, 10)
        await message.answer(f"{number}")


@dp.message(Command("bye"))
async def cmd_bye(message: types.Message):
 await message.reply("–æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —Ç—ã —É—Ö–æ–¥–∏—à—å", reply_markup=kb2)



@dp.message(F.text)
async def msg_handler(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not re.match("^[a-zA-Z–∞-—è–ê-–Ø—ë–Å ]*$", name):
        name = "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
# –ó–∞–º–µ–Ω–∞ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f"–ù—É –ø—Ä–∏–≤–µ—Ç, {name}")
    elif msg_user == '–ø–æ–∫–∞':
        await message.answer("–∑—Ä—è—è—è—è—è")
    else:
        await message.answer(message.text)
    if "—Ç—ã –∫—Ç–æ" in msg_user:
        await message.answer_dice(emoji="üé≤")
    #else:
        #await message.answer(f'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é')
        


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())