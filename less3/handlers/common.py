from aiogram import Router, types, F
from aiogram.filters.command import Command
from less3.utils.random_fox import fox
from less3.keyboards.keyboard import kb1, kb2
from random import randint
import re


router = Router()


@router.message(Command("start"))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {name}, –Ø –≠—Ö–æ–±–æ—Ç", reply_markup=kb1)


@router.message(Command("info"))
async def cmd_info(message: types.Message):
    await message.reply("–Ø —É–º–µ—é –ø–æ–≤—Ç–æ—Ä—è—Ç—å, –ú–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –ª–∏—Å—É, –∞ —Ç–∞–∫–∂–µ –º–æ–≥—É –ø–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é, –ø–æ–Ω–∏–º–∞—é —Å–ª–æ–≤–∞: –ø—Ä–∏–≤–µ—Ç, –ø–æ–∫–∞, –ø–æ–∫–∞–∂–∏ –õ–∏—Å—É")



@router.message(Command("fox"))
@router.message(Command("–ª–∏—Å–∞"))
@router.message(F.text.lower() == "–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É")
async def cmd_fox(message: types.Message):
    img_fox = fox()
    await message.reply(f"–î–µ—Ä–∂–∏ –õ–∏—Å—É")
    await message.answer_photo(photo=img_fox)


@router.message(F.text.lower() == 'num')
async def send_random(message: types.Message):
        number = randint(1, 10)
        await message.answer(f"{number}")


@router.message(Command("bye"))
async def cmd_bye(message: types.Message):
    await message.reply("–æ—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —Ç—ã —É—Ö–æ–¥–∏—à—å", reply_markup=kb2)


@router.message(F.text)
async def msg_handler(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not re.match("^[a-zA-Z–∞-—è–ê-–Ø—ë–Å ]*$", name):
        name = "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    # –ó–∞–º–µ–Ω–∞ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f"–ù—É –ø—Ä–∏–≤–µ—Ç, {name}")
    elif msg_user == '–ø–æ–∫–∞':
        await message.answer("–∑—Ä—è—è—è—è—è")
    else:
        await message.answer(message.text)
    if "—Ç—ã –∫—Ç–æ" in msg_user:
        await message.answer_dice(emoji="üé≤")
    # else:
    # await message.answer(f'–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é')




